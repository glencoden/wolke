volumes:
  certs:
  conf:
  db:
  vhost:
  html:
  acme:
  berta:

services:
  mailer:
    build:
      context: contexts/mailer
    restart: always
    environment:
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      VIRTUAL_HOST: ${HOST_MAILER}
      LETSENCRYPT_HOST: ${HOST_MAILER}
    ports:
      - "3100:5555"
    container_name: mailer

  tsc:
    build:
      context: contexts/tsc
    restart: always
    volumes:
      - ${STATIC_DIR}/tsc/build:/usr/src/app/static
    environment:
      API_DB_NAME: ${POSTGRES_DATABASE_TSC}
      AUTH_DB_NAME: ${POSTGRES_DATABASE_TSC_AUTH}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: db
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      VIRTUAL_HOST: ${HOST_TSC}
      LETSENCRYPT_HOST: ${HOST_TSC}
    ports:
      - "3200:5555"
    container_name: tsc

  cards:
    build:
      context: contexts/cards
      args:
        DATABASE_URL: ${CARDS_DATABASE_URL}
        UUID: ${CARDS_UUID}
    restart: always
    environment:
      VIRTUAL_HOST: ${HOST_CARDS}
      LETSENCRYPT_HOST: ${HOST_CARDS}
    ports:
      - "3250:3000"
    container_name: cards

  berta-bot:
    build:
      context: contexts/berta-bot
    restart: always
    volumes:
      - berta:/usr/src/app/files
    environment:
      HOST_ENV: ${HOST_ENV}
      BERTA_YOUTUBE_API_KEY: ${BERTA_YOUTUBE_API_KEY}
      VIRTUAL_HOST: ${HOST_BERTA_BOT}
      LETSENCRYPT_HOST: ${HOST_BERTA_BOT}
    ports:
      - "3300:5555"
    container_name: berta-bot

  looney-api:
    build:
      context: contexts/looney-api
    restart: always
    environment:
      REPERTOIRE_DB_NAME: ${POSTGRES_DATABASE_LOONEY_REPERTOIRE}
      LIVE_DB_NAME: ${POSTGRES_DATABASE_LOONEY_LIVE}
      AUTH_DB_NAME: ${POSTGRES_DATABASE_LOONEY_API_AUTH}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: db
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      CALENDAR_SCOPES: ${CALENDAR_SCOPES}
      GLEN_CALENDAR_PROJECT_NUMBER: ${GLEN_CALENDAR_PROJECT_NUMBER}
      GOOGLE_CALENDAR_ID: ${GOOGLE_CALENDAR_ID}
      GOOGLE_PRIVATE_KEY_BASE64: ${GOOGLE_PRIVATE_KEY_BASE64}
      GOOGLE_CLIENT_EMAIL: ${GOOGLE_CLIENT_EMAIL}
      VIRTUAL_HOST: ${HOST_LOONEY_API}
      VIRTUAL_PORT: 5555
      LETSENCRYPT_HOST: ${HOST_LOONEY_API}
    ports:
      - "3400:5555"
    container_name: looney-api

  looney-tool:
    build:
      context: contexts/looney-tool
    volumes:
      - ${STATIC_DIR}/looney-tool/client:/usr/src/app
    environment:
      NODE_ENV: production
      VIRTUAL_HOST: "${HOST_LOONEY_TOOL}"
      LETSENCRYPT_HOST: "${HOST_LOONEY_TOOL}"
    ports:
      - "3500:3000"
    container_name: looney-tool

  looney-boss:
    build:
      context: contexts/looney-boss
    volumes:
      - ${STATIC_DIR}/looney-boss:/usr/src/app
    environment:
      NODE_ENV: production
      VIRTUAL_HOST: "${HOST_LOONEY_BOSS}"
      LETSENCRYPT_HOST: "${HOST_LOONEY_BOSS}"
    ports:
      - "3650:3000"
    container_name: looney-boss

  looney-guest:
    build:
      context: contexts/looney-guest
    volumes:
      - ${STATIC_DIR}/looney-guest:/usr/src/app
    environment:
      NODE_ENV: production
      VIRTUAL_HOST: "${HOST_LOONEY_GUEST}"
      LETSENCRYPT_HOST: "${HOST_LOONEY_GUEST}"
    ports:
      - "3700:3000"
    container_name: looney-guest

  db:
    image: postgres:14.2-alpine
    container_name: postgres-database
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

  adminer:
    image: adminer:4.8.1
    container_name: postgres-adminer
    restart: always
    ports:
      - "8080:8080"

  nginx:
    image: nginx:1.21.4-alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro

  gen:
    image: jwilder/docker-gen:0.9.1
    container_name: nginx-proxy-gen
    depends_on:
      - nginx
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/templates:/etc/docker-gen/templates:ro
    command: -notify-sighup nginx-proxy -watch -only-exposed /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx
      - gen
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: nginx-proxy-gen
      DEFAULT_EMAIL: ${SSL_EMAIL}
